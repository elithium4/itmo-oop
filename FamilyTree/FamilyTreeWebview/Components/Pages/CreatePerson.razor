@page "/create"
@using FamilyTree.BLL.Services
@using FamilyTree.BLL.DTO
@using FamilyTree.DAL.Model
@inject IPersonService PersonService
@inject NavigationManager NavigationManager

<h3>Create New Person</h3>

<EditForm Model="createPerson" OnValidSubmit="HandleValidSubmit" FormName="create">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Имя:</label>
        <InputText @bind-Value="createPerson.Name" class="form-control"  />
        <ValidationMessage For="@(() => createPerson.Name)" />
    </div>

    <div class="mb-3">
        <label>Фамилия:</label>
        <InputText @bind-Value="createPerson.Surname" class="form-control" />
        <ValidationMessage For="@(() => createPerson.Surname)" />
    </div>

    <div class="mb-3">
        <label>Отчество:</label>
        <InputText @bind-Value="createPerson.Patronymic" class="form-control" />
        <ValidationMessage For="@(() => createPerson.Patronymic)" />
    </div>

    <div class="mb-3">
        <label>Пол:</label>
        <InputSelect @bind-Value="createPerson.Gender" class="form-control">
            <option value="">-- Выберите пол --</option>
            <option value="@Gender.Male">Мужской</option>
            <option value="@Gender.Female">Женский</option>
        </InputSelect>
        <ValidationMessage For="@(() => createPerson.Gender)" />
    </div>

    <div class="mb-3">
        <label>Дата рождения:</label>
        <InputDate @bind-Value="createPerson.Birthdate" class="form-control" />
        <ValidationMessage For="@(() => createPerson.Birthdate)" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    private CreatePersonDTO createPerson = new CreatePersonDTO();

    private async Task HandleValidSubmit()
    {
        await PersonService.CreatePerson(createPerson);
        NavigationManager.NavigateTo("/people");
    }
}